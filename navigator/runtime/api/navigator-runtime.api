public final class com/freeletics/mad/navigator/ActivityResultRequest : com/freeletics/mad/navigator/ResultOwner {
}

public abstract interface class com/freeletics/mad/navigator/ActivityRoute {
	public static final field Companion Lcom/freeletics/mad/navigator/ActivityRoute$Companion;
	public abstract fun fillInIntent ()Landroid/content/Intent;
}

public final class com/freeletics/mad/navigator/ActivityRoute$Companion {
}

public final class com/freeletics/mad/navigator/ActivityRoute$DefaultImpls {
	public static fun fillInIntent (Lcom/freeletics/mad/navigator/ActivityRoute;)Landroid/content/Intent;
}

public abstract interface class com/freeletics/mad/navigator/BaseRoute : android/os/Parcelable {
}

public class com/freeletics/mad/navigator/NavEventNavigator {
	public fun <init> ()V
	public final fun backPresses ()Lkotlinx/coroutines/flow/Flow;
	public final fun backPresses (Ljava/lang/Object;)Lkotlinx/coroutines/flow/Flow;
	public final fun deliverNavigationResult (Lcom/freeletics/mad/navigator/NavigationResultRequest$Key;Landroid/os/Parcelable;)V
	public final fun getNavEvents ()Lkotlinx/coroutines/flow/Flow;
	public final fun getOnBackPressedCallback ()Landroidx/activity/OnBackPressedCallback;
	public final fun navigateBack ()V
	public static synthetic fun navigateBackTo$default (Lcom/freeletics/mad/navigator/NavEventNavigator;Lkotlin/reflect/KClass;ZILjava/lang/Object;)V
	public final fun navigateForResult (Lcom/freeletics/mad/navigator/ActivityResultRequest;)V
	public final fun navigateForResult (Lcom/freeletics/mad/navigator/ActivityResultRequest;Ljava/lang/Object;)V
	public final fun navigateTo (Lcom/freeletics/mad/navigator/ActivityRoute;)V
	public final fun navigateTo (Lcom/freeletics/mad/navigator/NavRoute;)V
	public final fun navigateToRoot (Lcom/freeletics/mad/navigator/NavRoot;Z)V
	public static synthetic fun navigateToRoot$default (Lcom/freeletics/mad/navigator/NavEventNavigator;Lcom/freeletics/mad/navigator/NavRoot;ZILjava/lang/Object;)V
	public final fun navigateUp ()V
	protected final fun registerForActivityResult (Landroidx/activity/result/contract/ActivityResultContract;)Lcom/freeletics/mad/navigator/ActivityResultRequest;
	protected final fun registerForPermissionsResult ()Lcom/freeletics/mad/navigator/PermissionsResultRequest;
	public final fun requestPermissions (Lcom/freeletics/mad/navigator/PermissionsResultRequest;Ljava/util/List;)V
	public final fun requestPermissions (Lcom/freeletics/mad/navigator/PermissionsResultRequest;[Ljava/lang/String;)V
}

public abstract interface class com/freeletics/mad/navigator/NavRoot : com/freeletics/mad/navigator/BaseRoute {
}

public abstract interface class com/freeletics/mad/navigator/NavRoute : com/freeletics/mad/navigator/BaseRoute {
}

public final class com/freeletics/mad/navigator/NavigationResultRequest : com/freeletics/mad/navigator/ResultOwner {
	public final fun getKey ()Lcom/freeletics/mad/navigator/NavigationResultRequest$Key;
}

public final class com/freeletics/mad/navigator/NavigationResultRequest$Key : android/os/Parcelable {
	public static final field CREATOR Lcom/freeletics/mad/navigator/NavigationResultRequest$Key$CREATOR;
	public fun <init> (Landroid/os/Parcel;)V
	public final fun component1 ()I
	public final fun component2 ()Ljava/lang/String;
	public final fun copy (ILjava/lang/String;)Lcom/freeletics/mad/navigator/NavigationResultRequest$Key;
	public static synthetic fun copy$default (Lcom/freeletics/mad/navigator/NavigationResultRequest$Key;ILjava/lang/String;ILjava/lang/Object;)Lcom/freeletics/mad/navigator/NavigationResultRequest$Key;
	public fun describeContents ()I
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public fun writeToParcel (Landroid/os/Parcel;I)V
}

public final class com/freeletics/mad/navigator/NavigationResultRequest$Key$CREATOR : android/os/Parcelable$Creator {
	public fun createFromParcel (Landroid/os/Parcel;)Lcom/freeletics/mad/navigator/NavigationResultRequest$Key;
	public synthetic fun createFromParcel (Landroid/os/Parcel;)Ljava/lang/Object;
	public fun newArray (I)[Lcom/freeletics/mad/navigator/NavigationResultRequest$Key;
	public synthetic fun newArray (I)[Ljava/lang/Object;
}

public final class com/freeletics/mad/navigator/PermissionsResultRequest : com/freeletics/mad/navigator/ResultOwner {
}

public final class com/freeletics/mad/navigator/PermissionsResultRequest$PermissionResult : java/lang/Enum {
	public static final field DENIED Lcom/freeletics/mad/navigator/PermissionsResultRequest$PermissionResult;
	public static final field DENIED_PERMANENTLY Lcom/freeletics/mad/navigator/PermissionsResultRequest$PermissionResult;
	public static final field GRANTED Lcom/freeletics/mad/navigator/PermissionsResultRequest$PermissionResult;
	public static fun valueOf (Ljava/lang/String;)Lcom/freeletics/mad/navigator/PermissionsResultRequest$PermissionResult;
	public static fun values ()[Lcom/freeletics/mad/navigator/PermissionsResultRequest$PermissionResult;
}

public abstract class com/freeletics/mad/navigator/ResultOwner {
	public final fun getResults ()Lkotlinx/coroutines/flow/Flow;
}

public abstract interface annotation class com/freeletics/mad/navigator/internal/InternalNavigatorApi : java/lang/annotation/Annotation {
}

public final class com/freeletics/mad/navigator/internal/NavigateKt {
}

